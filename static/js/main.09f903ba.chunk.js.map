{"version":3,"sources":["Theme.ts","components/Container.tsx","components/LabelButton.tsx","components/TextInput.tsx","components/Controls.tsx","utilities.ts","components/Timeline.tsx","components/Row.tsx","components/Cell.tsx","components/Catches.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Theme","backgroundColor","containerBackgroundColor","darkBrown","fontFamily","buttonBlue","buttonBlueHover","labelYellow","labelYellowHover","lightGreen","teaGreen","fontSize","GlobalStyle","createGlobalStyle","props","theme","Container","styled","div","StyledLabelButton","motion","label","selected","LabelButton","children","initial","scale","animate","StyledLabel","StyledInput","input","TextInput","id","type","value","update","htmlFor","name","onChange","e","target","StyledControls","RadioOptions","Controls","fishOrBugs","setFishOrBugs","northOrSouth","setNorthOrSouth","showOnlyCurrentMonth","setShowOnlyCurrentMonth","showOnlyCurrentHour","setShowOnlyCurrentHour","date","setDate","time","setTime","style","textAlign","checked","simpleSort","a","b","Number","isNaN","hemisphereAdjustment","months","hemisphere","slice","Times","times","currentTime","ref","useRef","useEffect","current","canvas","width","height","ctx","getContext","count","length","split","forEach","i","color","fillStyle","fillRect","StyledRow","tr","Row","StyledCell","td","Label","span","Cell","THead","thead","Heading","th","Catches","data","sortBy","setSortBy","sortAsc","setSortAsc","month","hour","headings","columns","theCatches","filter","theCatch","currentHour","hours","map","hoursStringToNums","includes","currentMonth","monthsStringToNums","sort","relevantA","toString","relevantB","priceDiff","price","sortCatches","table","borderSpacing","opacity","y","exit","heading","key","onClick","Timeline","App","now","Date","useState","fish","setFish","bugs","setBugs","getFullYear","getMonth","getDate","getHours","getMinutes","fetchFish","axios","get","result","csvParse","fetchBugs","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"spBAEO,IAAMA,EAAsB,CACjCC,gBAAiB,yBACjBC,yBAA0B,yBAC1BC,UAAW,wBACXC,WAAY,qBACZC,WAAY,yBACZC,gBAAiB,wBACjBC,YAAa,yBACbC,iBAAkB,wBAClBC,WAAY,UACZC,SAAU,UACVC,SAAU,QAGCC,EAAcC,YAAH,KAGL,SAACC,GAAD,OAAWA,EAAMC,MAAMX,cAK7B,SAACU,GAAD,OAAWA,EAAMC,MAAMZ,aAOZ,SAACW,GAAD,OAAWA,EAAMC,MAAMd,mBAKlC,SAACa,GAAD,OAAWA,EAAMC,MAAMT,mB,qOClCpC,IAUeU,EAVGC,IAAOC,IAAV,KACO,SAACJ,GAAD,OAAWA,EAAMC,MAAMb,4B,myBCW7C,IAAMiB,EAAoBF,YAAOG,IAAOC,MAAdJ,CAAH,KACD,SAACH,GAAD,OAAWA,EAAMC,MAAMV,cAEvC,gBAAGiB,EAAH,EAAGA,SAAUP,EAAb,EAAaA,MAAb,OACAO,EAAWP,EAAMT,gBAAkBS,EAAMV,cAEpC,qBAAGU,MAAsCZ,aAU5B,SAACW,GAAD,OAAWA,EAAMC,MAAMT,mBACvB,SAACQ,GAAD,OAAWA,EAAMC,MAAMT,mBAKvB,SAACQ,GAAD,OAAWA,EAAMC,MAAMT,mBAKhC,SAACQ,GAAD,OAAYA,EAAMQ,SAAW,QAAU,UAwBvCC,EAV6B,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUE,EAAb,EAAaA,SAAb,OAC1C,kBAACL,EAAD,CACEG,SAAUA,EACVG,QAAS,CAAEC,MAAO,GAClBC,QAAS,CAAED,MAAO,IAEjBF,I,+1BClDL,IAAMR,EAAYC,IAAOC,IAAV,KAWgB,SAACJ,GAAD,OAAWA,EAAMC,MAAMT,mBAShDsB,EAAcX,IAAOI,MAAV,KAQXQ,EAAcZ,IAAOa,MAAV,KACK,SAAChB,GAAD,OAAWA,EAAMC,MAAMb,4BAElC,SAACY,GAAD,OAAWA,EAAMC,MAAMZ,aACnB,SAACW,GAAD,OAAWA,EAAMC,MAAMJ,YA8BvBoB,EArByB,SAAC,GAMlC,IALLV,EAKI,EALJA,MACAW,EAII,EAJJA,GACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,OAEA,OACE,kBAAC,EAAD,KACE,kBAACP,EAAD,CAAaQ,QAASJ,GAAKX,GAC3B,kBAACQ,EAAD,CACEG,GAAIA,EACJK,KAAML,EACNC,KAAMA,EACNC,MAAOA,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAAOI,EAAEC,OAAON,Y,qTC7DzC,IAAMO,EAAiBxB,IAAOC,IAAV,KAMdwB,EAAezB,IAAOC,IAAV,KAkIHyB,EA7GE,SAAC,GAaA,IAZhBC,EAYe,EAZfA,WACAC,EAWe,EAXfA,cACAC,EAUe,EAVfA,aACAC,EASe,EATfA,gBACAC,EAQe,EARfA,qBACAC,EAOe,EAPfA,wBACAC,EAMe,EANfA,oBACAC,EAKe,EALfA,uBACAC,EAIe,EAJfA,KACAC,EAGe,EAHfA,QACAC,EAEe,EAFfA,KACAC,EACe,EADfA,QAEA,OACE,oCACE,wBAAIC,MAAO,CAAEC,UAAW,WAAxB,wCAGA,kBAAChB,EAAD,KACE,kDACA,kDACA,6BACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAapB,SAAU,SAAWsB,EAAYR,QAAQ,QAAtD,OACO,IACL,2BACEH,KAAK,QACLI,KAAK,aACLL,GAAG,OACHE,MAAM,OACNwB,QAAS,SAAWd,EACpBN,SAAU,SAACC,GAAD,OAAOM,EAAcN,EAAEC,OAAON,WAG5C,kBAAC,EAAD,CAAaZ,SAAU,SAAWsB,EAAYR,QAAQ,QAAtD,OACO,IACL,2BACEH,KAAK,QACLI,KAAK,aACLL,GAAG,OACHE,MAAM,OACNwB,QAAS,SAAWd,EACpBN,SAAU,SAACC,GAAD,OAAOM,EAAcN,EAAEC,OAAON,aAKhD,6BACE,kBAACQ,EAAD,KACE,kBAAC,EAAD,CAAapB,SAA2B,UAAjBwB,EAA0BV,QAAQ,SAAzD,WACW,IACT,2BACEH,KAAK,QACLI,KAAK,eACLL,GAAG,QACHE,MAAM,QACNwB,QAAS,UAAYZ,EACrBR,SAAU,SAACC,GAAD,OAAOQ,EAAgBR,EAAEC,OAAON,WAG9C,kBAAC,EAAD,CAAaZ,SAA2B,UAAjBwB,EAA0BV,QAAQ,SAAzD,WACW,IACT,2BACEH,KAAK,QACLI,KAAK,eACLL,GAAG,QACHE,MAAM,QACNwB,QAAS,UAAYZ,EACrBR,SAAU,SAACC,GAAD,OAAOQ,EAAgBR,EAAEC,OAAON,aAKlD,kBAAC,EAAD,CAAaZ,SAAU0B,GAAvB,2BAC2B,IACzB,2BACEf,KAAK,WACLyB,QAASV,EACTV,SAAU,kBAAMW,GAAyBD,OAG7C,kBAAC,EAAD,CAAa1B,SAAU4B,GAAvB,0BAC0B,IACxB,2BACEjB,KAAK,WACLyB,QAASR,EACTZ,SAAU,kBAAMa,GAAwBD,OAG5C,kBAAC,EAAD,CACE7B,MAAM,kBACNW,GAAG,aACHC,KAAK,OACLC,MAAOkB,EACPjB,OAAQkB,IAEV,kBAAC,EAAD,CACEhC,MAAM,kBACNW,GAAG,aACHC,KAAK,OACLC,MAAOoB,EACPnB,OAAQoB,OC3GlB,SAASI,EAAWC,EAAQC,GAC1B,OAAKC,OAAOC,OAAOH,IAAOE,OAAOC,OAAOF,GACpCD,EAAIC,EAAU,EACdD,EAAIC,GAAW,EACZ,GAH6CD,GAAKC,EAyCpD,SAASG,EAAqBC,EAAgBC,GACnD,MAAsB,UAAfA,EAAyBD,EAASA,EAAOE,MAAM,GAAKF,EAAOE,MAAM,EAAG,GChE7E,IAiCeC,EAjCD,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,YAChBC,EAAMC,iBAA0B,MA6BtC,OAzBAC,qBAAU,WACR,GAAIF,GAAOA,EAAIG,QAAS,CACtB,IAAMC,EAA4BJ,EAAIG,QACtCC,EAAOC,MALG,IAMVD,EAAOE,OAPI,GAQX,IAAMC,EAAMH,EAAOI,WAAW,MACxBC,EAAQX,EAAMY,OAEhBH,GACFT,EAAMa,MAAM,IAAIC,SAAQ,SAAC7B,EAAM8B,GAC7B,IAAMC,EACK,MAAT/B,EACI8B,IAAMd,EACJ,yBACA,yBACFc,IAAMd,EACN,yBACA,yBACNQ,EAAIQ,UAAYD,EAChBP,EAAIS,SAASH,GArBP,IAqBoBJ,GAAQ,EArB5B,IAqBuCA,EAtBtC,UA0BZ,CAACV,EAAaC,EAAKF,IAEf,4BAAQb,MAAO,CAAEqB,OAAQ,OAAQD,MAAO,QAAUL,IAAKA,K,gcClChE,IAAMiB,EAAYvE,IAAOwE,GAAV,KAyBAC,EAJO,SAAC,GAAkB,IAAhBlE,EAAe,EAAfA,SACvB,OAAO,kBAACgE,EAAD,KAAYhE,I,6ZClBrB,IAAMmE,EAAa1E,IAAO2E,GAAV,KAME,SAAC9E,GAAD,MAA4B,UAAhBA,EAAMO,MAAoB,QAAU,UAI5DwE,EAAQ5E,IAAO6E,KAAV,KAkBIC,EATe,SAAC,GAAyB,IAAvB1E,EAAsB,EAAtBA,MAAOG,EAAe,EAAfA,SACtC,OACE,kBAACmE,EAAD,CAAYtE,MAAOA,GACjB,kBAACwE,EAAD,eAAWxE,EAAX,OACCG,I,ydCVP,IAAMwE,EAAQ/E,IAAOgF,MAAV,KAOLC,EAAUjF,IAAOkF,GAAV,KACS,gBAAGpF,EAAH,EAAGA,MAAH,SAAUO,SACjBP,EAAMP,iBAAmBO,EAAMR,eAEnC,SAACO,GAAD,OAAWA,EAAMC,MAAMZ,aAOV,SAACW,GAAD,OAAWA,EAAMC,MAAMP,oBAyGhC4F,EArGC,SAAC,GAWE,IAVjBC,EAUgB,EAVhBA,KACAvD,EASgB,EAThBA,aACAwD,EAQgB,EARhBA,OACAC,EAOgB,EAPhBA,UACAC,EAMgB,EANhBA,QACAC,EAKgB,EALhBA,WACAC,EAIgB,EAJhBA,MACAC,EAGgB,EAHhBA,KACA3D,EAEgB,EAFhBA,qBACAE,EACgB,EADhBA,oBAEM0D,EAAqBP,EAAKQ,QAC5BC,EAAaT,EACdU,QAAO,SAACC,GACP,QAAO9D,IJnCiB+D,EImCqBN,EJnCAO,EImCMF,EAASE,OJhDjC,SAACA,GAChC,OAAOA,EACJhC,MAAM,IACNiC,KAAI,SAACR,EAAMvB,GAAP,MAAuB,MAATuB,EAAevB,GAAK,KACtC2B,QAAO,SAACJ,GAAD,OAAUA,GAAQ,KAUGS,CAAkBF,GAChCG,SAASJ,KAFC,IAACA,EAAqBC,KIuC9CH,QAAO,SAACC,GACP,QAAOhE,IJ9CkBsE,EIgDrBZ,EJhD2CzC,EIiD3CD,EAAqBgD,EAAS/C,OAAQnB,IJ/Dd,SAACmB,GACjC,OAAOA,EACJiB,MAAM,IACNiC,KAAI,SAACT,EAAOtB,GAAR,MAAyB,MAAVsB,EAAgBtB,EAAI,GAAK,KAC5C2B,QAAO,SAACL,GAAD,OAAWA,GAAS,KAWEa,CAAmBtD,GACjCoD,SAASC,KAFC,IAACA,EAAsBrD,KIsDhDuD,MAAK,SAAC5D,EAAWC,GAAZ,OJnCiB,SACzB2C,EACAF,EACAK,EACAD,EACA9C,EACAC,GAEA,GACc,UAAZyC,GACY,WAAZA,EACA,CACA,IAAIhC,EAAsB,EACV,UAAZgC,IAAsChC,EAAcqC,GACxC,WAAZL,IAAuChC,EAAcoC,EAAQ,GACjE,IAAMe,EAAoB7D,EAAE0C,GAASoB,WAAWxC,MAAM,IAAIZ,GACpDqD,EAAoB9D,EAAEyC,GAASoB,WAAWxC,MAAM,IAAIZ,GAC1D,GACEmD,KAAejB,EAAU,IAAM,MAC/BmB,KAAenB,EAAU,IAAM,KAE/B,OAAQ,EACV,GACEiB,KAAejB,EAAU,IAAM,MAC/BmB,KAAenB,EAAU,IAAM,KAE/B,OAAO,EACT,IAAMoB,EAAoB/D,EAAEgE,MAAQjE,EAAEiE,MACtC,OAAqB,IAAdD,EAAkBA,EAAYjE,EAAWC,EAAEvB,KAAMwB,EAAExB,MAE5D,OAAOmE,EACH7C,EAAWC,EAAE0C,GAAUzC,EAAEyC,IACzB3C,EAAWE,EAAEyC,GAAU1C,EAAE0C,IIIzBwB,CAAYtB,EAASF,EAAQK,EAAMD,EAAO9C,EAAGC,MAGjD,OACE,kBAAC,IAAD,KACE,kBAAC,IAAOkE,MAAR,CACEvE,MAAO,CAAEwE,cAAe,cAAepD,MAAO,QAC9CnD,QAAS,CACPwG,QAAS,EACTC,EAAG,IAELvG,QAAS,CAAEsG,QAAS,EAAGC,EAAG,GAC1BC,KAAM,CAAEF,QAAS,EAAGC,GAAI,KAExB,kBAAClC,EAAD,KACE,4BACGY,EAASO,KAAI,SAACiB,GAAD,OACZ,kBAAClC,EAAD,CACEmC,IAAG,kBAAaD,GAChBE,QAAS,WACFF,IAA6B9B,EAChCG,GAAYD,IAEZC,GAAW,GACXF,EAAU6B,KAGd9G,SAAUgF,IAAY8B,GAErBA,QAKT,+BACGtB,EAAWK,KAAI,SAACH,GACf,OACE,kBAAC,EAAD,CAAKqB,IAAG,qBAAgBrB,EAAS3E,OAC9BuE,EAASO,KAAI,SAACiB,GACb,OACE,kBAAC,EAAD,CACEC,IAAG,qBAAgBrB,EAAS3E,KAAzB,YAAiC+F,GACpC/G,MAAO+G,GAEM,UAAZA,EACC,kBAACG,EAAD,CACElE,MAAO2C,EAASoB,GAChB9D,YAAaqC,IAED,WAAZyB,EACF,kBAACG,EAAD,CACElE,MAAOL,EACLgD,EAASoB,GACTtF,GAEFwB,YAAaoC,EAAQ,IAGvBM,EAASoB,eCIlBI,EA1HO,WACpB,IAAMC,EAAM,IAAIC,KADU,EAEFC,mBAAqB,MAFnB,mBAEnBC,EAFmB,KAEbC,EAFa,OAGFF,mBAAqB,MAHnB,mBAGnBG,EAHmB,KAGbC,EAHa,OAIUJ,mBAAS,QAJnB,mBAInB/F,EAJmB,KAIPC,EAJO,OAKc8F,mBAAS,SALvB,mBAKnB7F,EALmB,KAKLC,EALK,OAME4F,mBAAS,QANX,mBAMnBrC,EANmB,KAMXC,EANW,OAOIoC,oBAAS,GAPb,mBAOnBnC,EAPmB,KAOVC,EAPU,OAQFkC,mBAAS,GAAD,OAC3BF,EAAIO,cADuB,YAE5BP,EAAIQ,WAAa,EAAI,KAAOR,EAAIQ,WAAa,GAAKR,EAAIQ,WAAa,EAFvC,YAG1BR,EAAIS,WAAa,EAAI,IAAMT,EAAIS,UAAYT,EAAIS,YAX3B,mBAQnB9F,EARmB,KAQbC,EARa,OAaFsF,mBAAS,GAAD,OAC3BF,EAAIU,YAAc,EAAI,IAAMV,EAAIU,WAAaV,EAAIU,WADtB,YAE5BV,EAAIW,cAAgB,EAAI,IAAMX,EAAIW,aAAeX,EAAIW,eAf/B,mBAanB9F,EAbmB,KAabC,EAba,OAkB8BoF,oBAAS,GAlBvC,mBAkBnB3F,EAlBmB,KAkBGC,EAlBH,OAmB4B0F,oBAAS,GAnBrC,mBAmBnBzF,EAnBmB,KAmBEC,EAnBF,KAkC1B,OAbAsB,qBAAU,WACR,IAAM4E,EAAS,uCAAG,4BAAAzF,EAAA,sEACK0F,IAAMC,IAAI,iBADf,OACVC,EADU,OAEhBX,EAAQY,YAASD,EAAOnD,OAFR,2CAAH,qDAITqD,EAAS,uCAAG,4BAAA9F,EAAA,sEACK0F,IAAMC,IAAI,iBADf,OACVC,EADU,OAEhBT,EAAQU,YAASD,EAAOnD,OAFR,2CAAH,qDAIfgD,IACAK,MACC,IAGD,kBAAC,IAAD,CAAe3I,MAAOf,GACpB,kBAACY,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEgC,WAAYA,EACZC,cAAeA,EACfC,aAAcA,EACdC,gBAAiBA,EACjBK,KAAMA,EACNC,QAASA,EACTC,KAAMA,EACNC,QAASA,EACTP,qBAAsBA,EACtBE,oBAAqBA,EACrBD,wBAAyBA,EACzBE,uBAAwBA,KAG5B,kBAAC,EAAD,KACkB,SAAfP,GAAyBgG,GACxB,kBAAC,EAAD,CACEvC,KAAMuC,EACN9F,aAAcA,EACdwD,OAAQA,EACRE,QAASA,EACTD,UAAWA,EACXE,WAAYA,EACZC,MAAO,IAAIgC,KAAKtF,GAAM6F,WAAa,EACnCtC,MAAOrD,EAAK4B,MAAM,KAAK,GACvBhC,oBAAqBA,EACrBF,qBAAsBA,IAGV,SAAfJ,GAAyBkG,GACxB,kBAAC,EAAD,CACEzC,KAAMyC,EACNhG,aAAcA,EACdwD,OAAQA,EACRE,QAASA,EACTD,UAAWA,EACXE,WAAYA,EACZC,MAAO,IAAIgC,KAAKtF,GAAM6F,WAAa,EACnCtC,MAAOrD,EAAK4B,MAAM,KAAK,GACvBhC,oBAAqBA,EACrBF,qBAAsBA,KAI5B,kBAAC,EAAD,KACE,oSAMA,6CACkB,IAChB,uBACE2G,KAAK,4BACLnH,OAAO,SACPoH,IAAI,uBAHN,kBAFF,kBASkB,IAChB,uBACED,KAAK,kCACLnH,OAAO,SACPoH,IAAI,uBAHN,WAVF,sBAiBsB,IACpB,uBACED,KAAK,qDACLnH,OAAO,SACPoH,IAAI,uBAHN,QAlBF,QCzFYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.09f903ba.chunk.js","sourcesContent":["import { DefaultTheme, createGlobalStyle } from 'styled-components';\n\nexport const Theme: DefaultTheme = {\n  backgroundColor: 'rgba(238, 231, 185, 1)',\n  containerBackgroundColor: 'rgba(255, 249, 227, 1)',\n  darkBrown: 'rgba(121, 101, 81, 1)',\n  fontFamily: '\"Asap\", sans-serif',\n  buttonBlue: 'rgba(210, 237, 244, 1)',\n  buttonBlueHover: 'rgba(60, 190, 182, 1)',\n  labelYellow: 'rgba(253, 235, 164, 1)',\n  labelYellowHover: 'rgba(255, 207, 10, 1)',\n  lightGreen: '#9ad2cb',\n  teaGreen: '#d7ebba',\n  fontSize: '16px',\n};\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    font-family: ${(props) => props.theme.fontFamily};\n    font-weight: 500;\n  }\n\n  html, body {\n    color: ${(props) => props.theme.darkBrown};\n    font-size: 16px;\n  }\n\n  html {\n    background-image: url('./bg.svg');\n    background-repeat: repeat;\n    background-color: ${(props) => props.theme.backgroundColor};\n\n  }\n\n  a {\n    color: ${(props) => props.theme.buttonBlueHover};\n    text-decoration: none;\n  }\n`;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.containerBackgroundColor};\n  border-radius: 8px;\n  border-spacing: 1rem 0.5rem;\n  max-width: 900px;\n  margin: 10px auto;\n  padding: 1rem;\n  width: 100%;\n`;\n\nexport default Container;\n","import React from 'react';\nimport styled, { DefaultTheme } from 'styled-components';\nimport { motion } from 'framer-motion';\n\ninterface IStyledLabelButton {\n  selected: boolean;\n  theme: DefaultTheme;\n}\n\ninterface ILabelButton {\n  selected: boolean;\n  htmlFor?: string;\n}\n\nconst StyledLabelButton = styled(motion.label)`\n  background-color: ${(props) => props.theme.buttonBlue};\n  border: 3px solid\n    ${({ selected, theme }: IStyledLabelButton) =>\n      selected ? theme.buttonBlueHover : theme.buttonBlue};\n  border-radius: 30px;\n  color: ${({ theme }: IStyledLabelButton) => theme.darkBrown};\n  cursor: pointer;\n  display: block;\n  padding: 5px 0;\n  position: relative;\n  text-align: center;\n  transition: background-color 0.1s ease-in-out, color 0.1s ease-in-out,\n    border 0.1s ease-in-out;\n\n  &:hover {\n    background-color: ${(props) => props.theme.buttonBlueHover};\n    border: 3px solid ${(props) => props.theme.buttonBlueHover};\n    color: white;\n  }\n\n  &::after {\n    background-color: ${(props) => props.theme.buttonBlueHover};\n    border: 1px solid transparent;\n    border-radius: 50%;\n    content: '✔';\n    color: white;\n    display: ${(props) => (props.selected ? 'block' : 'none')};\n    font-size: 12px;\n    height: 15px;\n    position: absolute;\n    right: 0;\n    top: -10px;\n    width: 15px;\n  }\n\n  input {\n    display: none;\n  }\n`;\n\nconst LabelButton: React.FC<ILabelButton> = ({ selected, children }) => (\n  <StyledLabelButton\n    selected={selected}\n    initial={{ scale: 0 }}\n    animate={{ scale: 1 }}\n  >\n    {children}\n  </StyledLabelButton>\n);\n\nexport default LabelButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ITextInput {\n  label: string;\n  id: string;\n  type: string;\n  value: any;\n  update: (event: any) => void;\n}\n\nconst Container = styled.div`\n  border: 0;\n  border-bottom: 2px solid transparent;\n  display: grid;\n  grid-template: repeat(2, auto) / 1fr;\n  padding-bottom: 5px;\n  transition: border 0.1s ease-in-out;\n\n  &:active,\n  &:focus,\n  &:hover {\n    border-bottom: 2px solid ${(props) => props.theme.buttonBlueHover};\n  }\n\n  @media screen and (min-width: 480px) {\n    grid-gap: 16px;\n    grid-template: auto / repeat(2, 1fr);\n  }\n`;\n\nconst StyledLabel = styled.label`\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    text-align: end;\n  }\n`;\n\nconst StyledInput = styled.input`\n  background-color: ${(props) => props.theme.containerBackgroundColor};\n  border: 0;\n  color: ${(props) => props.theme.darkBrown};\n  font-size: ${(props) => props.theme.fontSize};\n  padding: 0;\n  text-align: center;\n\n  @media screen and (min-width: 480px) {\n    text-align: start;\n  }\n`;\n\nconst TextInput: React.FC<ITextInput> = ({\n  label,\n  id,\n  type,\n  value,\n  update,\n}) => {\n  return (\n    <Container>\n      <StyledLabel htmlFor={id}>{label}</StyledLabel>\n      <StyledInput\n        id={id}\n        name={id}\n        type={type}\n        value={value}\n        onChange={(e) => update(e.target.value)}\n      />\n    </Container>\n  );\n};\n\nexport default TextInput;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport LabelButton from './LabelButton';\nimport TextInput from './TextInput';\n\nconst StyledControls = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template: repeat(4, auto) / repeat(2, 1fr);\n`;\n\nconst RadioOptions = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template: auto / repeat(2, 1fr);\n`;\n\ninterface IControls {\n  fishOrBugs: string;\n  setFishOrBugs: (fob: string) => void;\n  northOrSouth: string;\n  setNorthOrSouth: (nos: string) => void;\n  showOnlyCurrentMonth: boolean;\n  setShowOnlyCurrentMonth: (setting: boolean) => void;\n  showOnlyCurrentHour: boolean;\n  setShowOnlyCurrentHour: (setting: boolean) => void;\n  date: string;\n  setDate: (theDate: string) => void;\n  time: string;\n  setTime: (theTime: string) => void;\n}\n\nconst Controls = ({\n  fishOrBugs,\n  setFishOrBugs,\n  northOrSouth,\n  setNorthOrSouth,\n  showOnlyCurrentMonth,\n  setShowOnlyCurrentMonth,\n  showOnlyCurrentHour,\n  setShowOnlyCurrentHour,\n  date,\n  setDate,\n  time,\n  setTime,\n}: IControls) => {\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>\n        Animal Crossing New Horizons Catches\n      </h1>\n      <StyledControls>\n        <div>See fish or bugs?</div>\n        <div>Select hemisphere</div>\n        <div>\n          <RadioOptions>\n            <LabelButton selected={'fish' === fishOrBugs} htmlFor=\"fish\">\n              Fish{' '}\n              <input\n                type=\"radio\"\n                name=\"fishOrBugs\"\n                id=\"fish\"\n                value=\"fish\"\n                checked={'fish' === fishOrBugs}\n                onChange={(e) => setFishOrBugs(e.target.value)}\n              />\n            </LabelButton>\n            <LabelButton selected={'bugs' === fishOrBugs} htmlFor=\"bugs\">\n              Bugs{' '}\n              <input\n                type=\"radio\"\n                name=\"fishOrBugs\"\n                id=\"bugs\"\n                value=\"bugs\"\n                checked={'bugs' === fishOrBugs}\n                onChange={(e) => setFishOrBugs(e.target.value)}\n              />\n            </LabelButton>\n          </RadioOptions>\n        </div>\n        <div>\n          <RadioOptions>\n            <LabelButton selected={northOrSouth === 'north'} htmlFor=\"north\">\n              Northern{' '}\n              <input\n                type=\"radio\"\n                name=\"northOrSouth\"\n                id=\"north\"\n                value=\"north\"\n                checked={'north' === northOrSouth}\n                onChange={(e) => setNorthOrSouth(e.target.value)}\n              />\n            </LabelButton>\n            <LabelButton selected={northOrSouth === 'south'} htmlFor=\"south\">\n              Southern{' '}\n              <input\n                type=\"radio\"\n                name=\"northOrSouth\"\n                id=\"south\"\n                value=\"south\"\n                checked={'south' === northOrSouth}\n                onChange={(e) => setNorthOrSouth(e.target.value)}\n              />\n            </LabelButton>\n          </RadioOptions>\n        </div>\n        <LabelButton selected={showOnlyCurrentMonth}>\n          Show Only Current Month?{' '}\n          <input\n            type=\"checkbox\"\n            checked={showOnlyCurrentMonth}\n            onChange={() => setShowOnlyCurrentMonth(!showOnlyCurrentMonth)}\n          />\n        </LabelButton>\n        <LabelButton selected={showOnlyCurrentHour}>\n          Show Only Current Time?{' '}\n          <input\n            type=\"checkbox\"\n            checked={showOnlyCurrentHour}\n            onChange={() => setShowOnlyCurrentHour(!showOnlyCurrentHour)}\n          />\n        </LabelButton>\n        <TextInput\n          label=\"Choose the date\"\n          id=\"date-input\"\n          type=\"date\"\n          value={date}\n          update={setDate}\n        />\n        <TextInput\n          label=\"Choose the time\"\n          id=\"time-input\"\n          type=\"time\"\n          value={time}\n          update={setTime}\n        />\n      </StyledControls>\n    </>\n  );\n};\n\nexport default Controls;\n","import { ICatch } from './types';\n\nexport const monthsStringToNums = (months: string): number[] => {\n  return months\n    .split('')\n    .map((month, i) => (month === 'y' ? i + 1 : -1))\n    .filter((month) => month > -1);\n};\n\nexport const hoursStringToNums = (hours: string): number[] => {\n  return hours\n    .split('')\n    .map((hour, i) => (hour === 'y' ? i : -1))\n    .filter((hour) => hour > -1);\n};\n\nexport const inCurrentMonth = (currentMonth: number, months: string) => {\n  const monthsNumbers: number[] = monthsStringToNums(months);\n  if (monthsNumbers.includes(currentMonth)) return true;\n  return false;\n};\n\nexport const inCurrentHour = (currentHour: number, hours: string) => {\n  const hoursNumbers: number[] = hoursStringToNums(hours);\n  if (hoursNumbers.includes(currentHour)) return true;\n  return false;\n};\n\nfunction simpleSort(a: any, b: any): number {\n  if (!Number.isNaN(+a) && !Number.isNaN(+b)) return +a - +b;\n  if (a > b) return 1;\n  if (a < b) return -1;\n  return 0;\n}\n\nexport const sortCatches = (\n  sortAsc: boolean,\n  sortBy: keyof ICatch,\n  hour: number,\n  month: number,\n  a: ICatch,\n  b: ICatch\n): number => {\n  if (\n    sortBy === ('hours' as keyof ICatch) ||\n    sortBy === ('months' as keyof ICatch)\n  ) {\n    let currentTime: number = 0;\n    if (sortBy === ('hours' as keyof ICatch)) currentTime = hour;\n    if (sortBy === ('months' as keyof ICatch)) currentTime = month - 1;\n    const relevantA: string = a[sortBy]!.toString().split('')[currentTime];\n    const relevantB: string = b[sortBy]!.toString().split('')[currentTime];\n    if (\n      relevantA === (sortAsc ? 'y' : 'n') &&\n      relevantB === (sortAsc ? 'n' : 'y')\n    )\n      return -1;\n    if (\n      relevantA === (sortAsc ? 'n' : 'y') &&\n      relevantB === (sortAsc ? 'y' : 'n')\n    )\n      return 1;\n    const priceDiff: number = b.price - a.price;\n    return priceDiff !== 0 ? priceDiff : simpleSort(a.name, b.name);\n  }\n  return sortAsc\n    ? simpleSort(a[sortBy]!, b[sortBy]!)\n    : simpleSort(b[sortBy]!, a[sortBy]!);\n};\n\nexport function hemisphereAdjustment(months: string, hemisphere: string) {\n  return hemisphere === 'north' ? months : months.slice(6) + months.slice(0, 6);\n}\n","import React, { useEffect, useRef } from 'react';\n\ninterface ITimes {\n  times: string;\n  currentTime: number;\n}\n\nconst Times = ({ times, currentTime }: ITimes) => {\n  const ref = useRef<HTMLCanvasElement>(null);\n  const height = 60;\n  const width = 240;\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const canvas: HTMLCanvasElement = ref.current;\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext('2d');\n      const count = times.length;\n\n      if (ctx) {\n        times.split('').forEach((time, i) => {\n          const color =\n            time === 'y'\n              ? i === currentTime\n                ? 'rgba(105, 206, 107, 1)'\n                : 'rgba(161, 222, 164, 1)'\n              : i === currentTime\n              ? 'rgba(200, 190, 150, 1)'\n              : 'rgba(225, 217, 170, 1)';\n          ctx.fillStyle = color;\n          ctx.fillRect(i * (width / count), 0, width / count, height);\n        });\n      }\n    }\n  }, [currentTime, ref, times]);\n\n  return <canvas style={{ height: '25px', width: '100%' }} ref={ref} />;\n};\n\nexport default Times;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledRow = styled.tr`\n  border-bottom: 1px solid rgba(225, 217, 170, 1);\n  display: grid;\n  grid-gap: 0.25rem;\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n\n  &:last-of-type {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n\n  @media screen and (min-width: 480px) {\n    border: none;\n    display: table-row;\n    margin: none;\n    padding: none;\n  }\n`;\n\nconst Row: React.FC = ({ children }) => {\n  return <StyledRow>{children}</StyledRow>;\n};\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ICell {\n  label: string;\n}\n\nconst StyledCell = styled.td<ICell>`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n\n  @media screen and (min-width: 480px) {\n    display: table-cell;\n    text-align: ${(props) => (props.label === 'price' ? 'right' : 'left')};\n  }\n`;\n\nconst Label = styled.span`\n  font-size: 0.9rem;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 480px) {\n    display: none;\n  }\n`;\n\nconst Cell: React.FC<ICell> = ({ label, children }) => {\n  return (\n    <StyledCell label={label}>\n      <Label>{`${label}: `}</Label>\n      {children}\n    </StyledCell>\n  );\n};\n\nexport default Cell;\n","import React from 'react';\nimport styled, { DefaultTheme } from 'styled-components';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nimport { ICatch, ICatchProp } from '../types';\nimport {\n  inCurrentMonth,\n  inCurrentHour,\n  sortCatches,\n  hemisphereAdjustment,\n} from '../utilities';\nimport Timeline from './Timeline';\nimport Row from './Row';\nimport Cell from './Cell';\n\ninterface IHeading {\n  selected: boolean;\n  theme: DefaultTheme;\n}\n\nconst THead = styled.thead`\n  display: none;\n  @media screen and (min-width: 480px) {\n    display: table-header-group;\n  }\n`;\n\nconst Heading = styled.th`\n  background-color: ${({ theme, selected }: IHeading) =>\n    selected ? theme.labelYellowHover : theme.labelYellow};\n  border-radius: 4px;\n  color: ${(props) => props.theme.darkBrown};\n  cursor: pointer;\n  padding: 5px 0;\n  text-transform: capitalize;\n  transition: background-color 0.1s ease-in-out;\n\n  &:hover {\n    background-color: ${(props) => props.theme.labelYellowHover};\n  }\n`;\n\nconst Catches = ({\n  data,\n  northOrSouth,\n  sortBy,\n  setSortBy,\n  sortAsc,\n  setSortAsc,\n  month,\n  hour,\n  showOnlyCurrentMonth,\n  showOnlyCurrentHour,\n}: ICatchProp) => {\n  const headings: string[] = data.columns;\n  let theCatches = data\n    .filter((theCatch: ICatch) => {\n      return showOnlyCurrentHour && !inCurrentHour(hour, theCatch.hours)\n        ? false\n        : true;\n    })\n    .filter((theCatch: ICatch) => {\n      return showOnlyCurrentMonth &&\n        !inCurrentMonth(\n          month,\n          hemisphereAdjustment(theCatch.months, northOrSouth)\n        )\n        ? false\n        : true;\n    })\n    .sort((a: ICatch, b: ICatch) =>\n      sortCatches(sortAsc, sortBy, hour, month, a, b)\n    );\n\n  return (\n    <AnimatePresence>\n      <motion.table\n        style={{ borderSpacing: '1rem 0.5rem', width: '100%' }}\n        initial={{\n          opacity: 0,\n          y: 50,\n        }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -10 }}\n      >\n        <THead>\n          <tr>\n            {headings.map((heading: string) => (\n              <Heading\n                key={`heading-${heading}`}\n                onClick={() => {\n                  if ((heading as keyof ICatch) === sortBy) {\n                    setSortAsc(!sortAsc);\n                  } else {\n                    setSortAsc(true);\n                    setSortBy(heading as keyof ICatch);\n                  }\n                }}\n                selected={sortBy === (heading as keyof ICatch)}\n              >\n                {heading}\n              </Heading>\n            ))}\n          </tr>\n        </THead>\n        <tbody>\n          {theCatches.map((theCatch: ICatch) => {\n            return (\n              <Row key={`theCatches-${theCatch.name}`}>\n                {headings.map((heading) => {\n                  return (\n                    <Cell\n                      key={`theCatches-${theCatch.name}-${heading}`}\n                      label={heading}\n                    >\n                      {heading === 'hours' ? (\n                        <Timeline\n                          times={theCatch[heading]}\n                          currentTime={hour}\n                        />\n                      ) : heading === 'months' ? (\n                        <Timeline\n                          times={hemisphereAdjustment(\n                            theCatch[heading],\n                            northOrSouth\n                          )}\n                          currentTime={month - 1}\n                        />\n                      ) : (\n                        theCatch[heading as keyof ICatch]\n                      )}\n                    </Cell>\n                  );\n                })}\n              </Row>\n            );\n          })}\n        </tbody>\n      </motion.table>\n    </AnimatePresence>\n  );\n};\n\nexport default Catches;\n","import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\nimport { csvParse } from 'd3-dsv';\n\nimport { ICatch } from './types';\nimport { Theme, GlobalStyle } from './Theme';\nimport Container from './components/Container';\nimport Controls from './components/Controls';\nimport Catches from './components/Catches';\n\nconst App: React.FC = () => {\n  const now = new Date();\n  const [fish, setFish] = useState<any | null>(null);\n  const [bugs, setBugs] = useState<any | null>(null);\n  const [fishOrBugs, setFishOrBugs] = useState('fish');\n  const [northOrSouth, setNorthOrSouth] = useState('north');\n  const [sortBy, setSortBy] = useState('name' as keyof ICatch);\n  const [sortAsc, setSortAsc] = useState(true);\n  const [date, setDate] = useState(\n    `${now.getFullYear()}-${\n      now.getMonth() < 9 ? '0' + (now.getMonth() + 1) : now.getMonth() + 1\n    }-${now.getDate() <= 9 ? '0' + now.getDate() : now.getDate()}`\n  );\n  const [time, setTime] = useState(\n    `${now.getHours() <= 9 ? '0' + now.getHours() : now.getHours()}:${\n      now.getMinutes() <= 9 ? '0' + now.getMinutes() : now.getMinutes()\n    }`\n  );\n  const [showOnlyCurrentMonth, setShowOnlyCurrentMonth] = useState(false);\n  const [showOnlyCurrentHour, setShowOnlyCurrentHour] = useState(false);\n\n  useEffect(() => {\n    const fetchFish = async () => {\n      const result = await axios.get('data/fish.csv');\n      setFish(csvParse(result.data));\n    };\n    const fetchBugs = async () => {\n      const result = await axios.get('data/bugs.csv');\n      setBugs(csvParse(result.data));\n    };\n    fetchFish();\n    fetchBugs();\n  }, []);\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <Container>\n        <Controls\n          fishOrBugs={fishOrBugs}\n          setFishOrBugs={setFishOrBugs}\n          northOrSouth={northOrSouth}\n          setNorthOrSouth={setNorthOrSouth}\n          date={date}\n          setDate={setDate}\n          time={time}\n          setTime={setTime}\n          showOnlyCurrentMonth={showOnlyCurrentMonth}\n          showOnlyCurrentHour={showOnlyCurrentHour}\n          setShowOnlyCurrentMonth={setShowOnlyCurrentMonth}\n          setShowOnlyCurrentHour={setShowOnlyCurrentHour}\n        ></Controls>\n      </Container>\n      <Container>\n        {fishOrBugs === 'fish' && fish && (\n          <Catches\n            data={fish}\n            northOrSouth={northOrSouth}\n            sortBy={sortBy}\n            sortAsc={sortAsc}\n            setSortBy={setSortBy}\n            setSortAsc={setSortAsc}\n            month={new Date(date).getMonth() + 1}\n            hour={+time.split(':')[0]}\n            showOnlyCurrentHour={showOnlyCurrentHour}\n            showOnlyCurrentMonth={showOnlyCurrentMonth}\n          />\n        )}\n        {fishOrBugs === 'bugs' && bugs && (\n          <Catches\n            data={bugs}\n            northOrSouth={northOrSouth}\n            sortBy={sortBy}\n            sortAsc={sortAsc}\n            setSortBy={setSortBy}\n            setSortAsc={setSortAsc}\n            month={new Date(date).getMonth() + 1}\n            hour={+time.split(':')[0]}\n            showOnlyCurrentHour={showOnlyCurrentHour}\n            showOnlyCurrentMonth={showOnlyCurrentMonth}\n          />\n        )}\n      </Container>\n      <Container>\n        <p>\n          Want an easier way to figure what what fish and bugs are available\n          when in Animal Crossing: New Horizons? Want a table that's easy to\n          scan and sort? You've come to the right place! Choose your criteria to\n          filter the table and click the headings to sort entries.\n        </p>\n        <p>\n          Tool created by{' '}\n          <a\n            href=\"https://tomvanantwerp.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Tom VanAntwerp\n          </a>\n          . Follow Tom on{' '}\n          <a\n            href=\"https://twitter.com/tvanantwerp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            twitter\n          </a>\n          . Report any issues{' '}\n          <a\n            href=\"https://github.com/tvanantwerp/acnh-catches/issues\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>\n          .\n        </p>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}