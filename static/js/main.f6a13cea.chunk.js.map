{"version":3,"sources":["Theme.ts","components/LabelButton.tsx","components/Controls.tsx","utilities.ts","components/Timeline.tsx","components/Row.tsx","components/Cell.tsx","components/Catches.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Theme","backgroundColor","darkBrown","fontFamily","lightGreen","teaGreen","GlobalStyle","createGlobalStyle","props","theme","LabelButton","styled","label","selected","StyledControls","div","RadioOptions","Controls","fishOrBugs","setFishOrBugs","northOrSouth","setNorthOrSouth","showOnlyCurrentMonth","setShowOnlyCurrentMonth","showOnlyCurrentHour","setShowOnlyCurrentHour","date","setDate","time","setTime","style","textAlign","htmlFor","type","name","id","value","checked","onChange","e","target","simpleSort","a","b","Number","isNaN","hemisphereAdjustment","months","hemisphere","slice","TimesContainer","StyledTime","yes","currentTime","Times","theCatch","times","split","map","i","key","StyledRow","tr","Row","children","StyledCell","td","Label","span","Cell","Table","table","THead","thead","Heading","th","Catches","data","sortBy","setSortBy","sortAsc","setSortAsc","month","hour","headings","columns","theCatches","filter","currentHour","hours","hoursStringToNums","includes","currentMonth","monthsStringToNums","sort","relevantA","toString","relevantB","priceDiff","price","sortCatches","heading","onClick","Timeline","Container","App","now","Date","useState","fish","setFish","bugs","setBugs","getFullYear","getMonth","getDate","getHours","getMinutes","useEffect","fetchFish","axios","get","result","csvParse","fetchBugs","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f6a13cea.chunk.js","sourcesContent":["import { DefaultTheme, createGlobalStyle } from 'styled-components';\n\nexport const Theme: DefaultTheme = {\n  backgroundColor: '#6AC1DB',\n  darkBrown: '#450000',\n  fontFamily: '\"Asap\", sans-serif',\n  lightGreen: '#9ad2cb',\n  teaGreen: '#d7ebba',\n};\n\nexport const GlobalStyle = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    font-family: ${(props) => props.theme.fontFamily};\n    font-weight: 500;\n  }\n\n  html, body {\n    background-color: ${(props) => props.theme.backgroundColor};\n    color: ${(props) => props.theme.darkBrown};\n  }\n`;\n","import styled, { DefaultTheme } from 'styled-components';\n\ninterface ILabelButton {\n  selected: boolean;\n  theme: DefaultTheme;\n}\n\nconst LabelButton = styled.label`\n  background-color: ${({ selected, theme }: ILabelButton) =>\n    selected ? theme.teaGreen : theme.lightGreen};\n  border: 1px solid\n    ${({ selected, theme }: ILabelButton) =>\n      selected ? theme.teaGreen : theme.lightGreen};\n  border-radius: 4px;\n  color: ${({ selected, theme }: ILabelButton) => theme.darkBrown};\n  cursor: pointer;\n  display: block;\n  padding: 5px 0;\n  text-align: center;\n\n  input {\n    display: none;\n  }\n`;\n\nexport default LabelButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport LabelButton from './LabelButton';\n\nconst StyledControls = styled.div`\n  background-color: white;\n  border: 1px solid white;\n  border-radius: 8px;\n  display: grid;\n  grid-gap: 1rem;\n  grid-template: repeat(4, auto) / repeat(2, 1fr);\n  padding: 1rem;\n`;\n\nconst RadioOptions = styled.div`\n  display: grid;\n  grid-gap: 1rem;\n  grid-template: auto / repeat(2, 1fr);\n`;\n\ninterface IControls {\n  fishOrBugs: string;\n  setFishOrBugs: (fob: string) => void;\n  northOrSouth: string;\n  setNorthOrSouth: (nos: string) => void;\n  showOnlyCurrentMonth: boolean;\n  setShowOnlyCurrentMonth: (setting: boolean) => void;\n  showOnlyCurrentHour: boolean;\n  setShowOnlyCurrentHour: (setting: boolean) => void;\n  date: string;\n  setDate: (theDate: string) => void;\n  time: string;\n  setTime: (theTime: string) => void;\n}\n\nconst Controls = ({\n  fishOrBugs,\n  setFishOrBugs,\n  northOrSouth,\n  setNorthOrSouth,\n  showOnlyCurrentMonth,\n  setShowOnlyCurrentMonth,\n  showOnlyCurrentHour,\n  setShowOnlyCurrentHour,\n  date,\n  setDate,\n  time,\n  setTime,\n}: IControls) => {\n  return (\n    <>\n      <h1 style={{ textAlign: 'center' }}>\n        Animal Crossing New Horizons Catches\n      </h1>\n      <StyledControls>\n        <div>See fish or bugs?</div>\n        <div>Select hemisphere</div>\n        <div>\n          <RadioOptions>\n            <LabelButton selected={'fish' === fishOrBugs} htmlFor=\"fish\">\n              Fish{' '}\n              <input\n                type=\"radio\"\n                name=\"fishOrBugs\"\n                id=\"fish\"\n                value=\"fish\"\n                checked={'fish' === fishOrBugs}\n                onChange={(e) => setFishOrBugs(e.target.value)}\n              />\n            </LabelButton>\n            <LabelButton selected={'bugs' === fishOrBugs} htmlFor=\"bugs\">\n              Bugs{' '}\n              <input\n                type=\"radio\"\n                name=\"fishOrBugs\"\n                id=\"bugs\"\n                value=\"bugs\"\n                checked={'bugs' === fishOrBugs}\n                onChange={(e) => setFishOrBugs(e.target.value)}\n              />\n            </LabelButton>\n          </RadioOptions>\n        </div>\n        <div>\n          <RadioOptions>\n            <LabelButton selected={northOrSouth === 'north'} htmlFor=\"north\">\n              Northern{' '}\n              <input\n                type=\"radio\"\n                name=\"northOrSouth\"\n                id=\"north\"\n                value=\"north\"\n                checked={'north' === northOrSouth}\n                onChange={(e) => setNorthOrSouth(e.target.value)}\n              />\n            </LabelButton>\n            <LabelButton selected={northOrSouth === 'south'} htmlFor=\"south\">\n              Southern{' '}\n              <input\n                type=\"radio\"\n                name=\"northOrSouth\"\n                id=\"south\"\n                value=\"south\"\n                checked={'south' === northOrSouth}\n                onChange={(e) => setNorthOrSouth(e.target.value)}\n              />\n            </LabelButton>\n          </RadioOptions>\n        </div>\n        <LabelButton selected={showOnlyCurrentMonth}>\n          Show Only Current Month?{' '}\n          <input\n            type=\"checkbox\"\n            checked={showOnlyCurrentMonth}\n            onChange={() => setShowOnlyCurrentMonth(!showOnlyCurrentMonth)}\n          />\n        </LabelButton>\n        <LabelButton selected={showOnlyCurrentHour}>\n          Show Only Current Time?{' '}\n          <input\n            type=\"checkbox\"\n            checked={showOnlyCurrentHour}\n            onChange={() => setShowOnlyCurrentHour(!showOnlyCurrentHour)}\n          />\n        </LabelButton>\n        <label>\n          Choose the date{' '}\n          <input\n            type=\"date\"\n            value={date}\n            onChange={(e) => {\n              setDate(e.target.value);\n            }}\n          />\n        </label>\n        <label>\n          Choose the time{' '}\n          <input\n            type=\"time\"\n            value={time}\n            onChange={(e) => {\n              setTime(e.target.value);\n            }}\n          />\n        </label>\n      </StyledControls>\n    </>\n  );\n};\n\nexport default Controls;\n","import { ICatch } from './types';\n\nexport const monthsStringToNums = (months: string): number[] => {\n  return months\n    .split('')\n    .map((month, i) => (month === 'y' ? i + 1 : -1))\n    .filter((month) => month > -1);\n};\n\nexport const hoursStringToNums = (hours: string): number[] => {\n  return hours\n    .split('')\n    .map((hour, i) => (hour === 'y' ? i : -1))\n    .filter((hour) => hour > -1);\n};\n\nexport const inCurrentMonth = (currentMonth: number, months: string) => {\n  const monthsNumbers: number[] = monthsStringToNums(months);\n  if (monthsNumbers.includes(currentMonth)) return true;\n  return false;\n};\n\nexport const inCurrentHour = (currentHour: number, hours: string) => {\n  const hoursNumbers: number[] = hoursStringToNums(hours);\n  if (hoursNumbers.includes(currentHour)) return true;\n  return false;\n};\n\nfunction simpleSort(a: any, b: any): number {\n  if (!Number.isNaN(+a) && !Number.isNaN(+b)) return +a - +b;\n  if (a > b) return 1;\n  if (a < b) return -1;\n  return 0;\n}\n\nexport const sortCatches = (\n  sortAsc: boolean,\n  sortBy: keyof ICatch,\n  hour: number,\n  month: number,\n  a: ICatch,\n  b: ICatch\n): number => {\n  if (\n    sortBy === ('hours' as keyof ICatch) ||\n    sortBy === ('months' as keyof ICatch)\n  ) {\n    let currentTime: number = 0;\n    if (sortBy === ('hours' as keyof ICatch)) currentTime = hour;\n    if (sortBy === ('months' as keyof ICatch)) currentTime = month - 1;\n    const relevantA: string = a[sortBy]!.toString().split('')[currentTime];\n    const relevantB: string = b[sortBy]!.toString().split('')[currentTime];\n    if (\n      relevantA === (sortAsc ? 'y' : 'n') &&\n      relevantB === (sortAsc ? 'n' : 'y')\n    )\n      return -1;\n    if (\n      relevantA === (sortAsc ? 'n' : 'y') &&\n      relevantB === (sortAsc ? 'y' : 'n')\n    )\n      return 1;\n    const priceDiff: number = b.price - a.price;\n    return priceDiff !== 0 ? priceDiff : simpleSort(a.name, b.name);\n  }\n  return sortAsc\n    ? simpleSort(a[sortBy]!, b[sortBy]!)\n    : simpleSort(b[sortBy]!, a[sortBy]!);\n};\n\nexport function hemisphereAdjustment(months: string, hemisphere: string) {\n  return hemisphere === 'north' ? months : months.slice(6) + months.slice(0, 6);\n}\n","import React from 'react';\nimport styled, { DefaultTheme } from 'styled-components';\n\ninterface ITimes {\n  theCatch: string;\n  times: string;\n  currentTime: number;\n}\n\ninterface IHour {\n  theme: DefaultTheme;\n  yes: boolean;\n  currentTime: boolean;\n}\n\nconst TimesContainer = styled.div`\n  display: flex;\n  height: 25px;\n  min-width: 100px;\n`;\n\nconst StyledTime = styled.div`\n  background-color: ${({ theme, yes, currentTime }: IHour) =>\n    yes\n      ? currentTime\n        ? '#9cd08f'\n        : theme.teaGreen\n      : currentTime\n      ? '#cccccc'\n      : '#dedede'};\n  flex: 1;\n`;\n\nconst Times = ({ theCatch, times, currentTime }: ITimes) => {\n  return (\n    <TimesContainer>\n      {times.split('').map((time, i) => {\n        return (\n          <StyledTime\n            key={`time-${theCatch}-${time}-${i}`}\n            yes={time === 'y'}\n            currentTime={currentTime === i}\n          />\n        );\n      })}\n    </TimesContainer>\n  );\n};\n\nexport default Times;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledRow = styled.tr`\n  border-bottom: 1px solid ${(props) => props.theme.teaGreen};\n  display: grid;\n  grid-gap: 0.25rem;\n  margin-bottom: 0.5rem;\n  padding-bottom: 0.5rem;\n\n  &:last-of-type {\n    border-bottom: none;\n    margin-bottom: 0;\n    padding-bottom: 0;\n  }\n\n  @media screen and (min-width: 480px) {\n    border: none;\n    display: table-row;\n    margin: none;\n    padding: none;\n  }\n`;\n\nconst Row: React.FC = ({ children }) => {\n  return <StyledRow>{children}</StyledRow>;\n};\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ICell {\n  label: string;\n}\n\nconst StyledCell = styled.td<ICell>`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n\n  @media screen and (min-width: 480px) {\n    display: table-cell;\n    text-align: ${(props) => (props.label === 'price' ? 'right' : 'left')};\n  }\n`;\n\nconst Label = styled.span`\n  font-size: 0.9rem;\n  text-transform: uppercase;\n\n  @media screen and (min-width: 480px) {\n    display: none;\n  }\n`;\n\nconst Cell: React.FC<ICell> = ({ label, children }) => {\n  return (\n    <StyledCell label={label}>\n      <Label>{`${label}: `}</Label>\n      {children}\n    </StyledCell>\n  );\n};\n\nexport default Cell;\n","import React from 'react';\nimport styled, { DefaultTheme } from 'styled-components';\n\nimport { ICatch, ICatchProp } from '../types';\nimport {\n  inCurrentMonth,\n  inCurrentHour,\n  sortCatches,\n  hemisphereAdjustment,\n} from '../utilities';\nimport Timeline from './Timeline';\nimport Row from './Row';\nimport Cell from './Cell';\n\nconst Table = styled.table`\n  background-color: white;\n  border: 1px solid white;\n  border-radius: 8px;\n  border-spacing: 1rem 0.5rem;\n  width: 100%;\n`;\n\ninterface IHeading {\n  selected: boolean;\n  theme: DefaultTheme;\n}\n\nconst THead = styled.thead`\n  display: none;\n  @media screen and (min-width: 480px) {\n    display: table-header-group;\n  }\n`;\n\nconst Heading = styled.th`\n  background-color: ${({ theme, selected }: IHeading) =>\n    selected ? theme.teaGreen : theme.lightGreen};\n  border: 1px solid\n    ${({ theme, selected }: IHeading) =>\n      selected ? theme.teaGreen : theme.lightGreen};\n  border-radius: 4px;\n  color: ${({ theme, selected }: IHeading) => theme.darkBrown};\n  cursor: pointer;\n  padding: 5px 0;\n  text-transform: capitalize;\n`;\n\nconst Catches = ({\n  data,\n  northOrSouth,\n  sortBy,\n  setSortBy,\n  sortAsc,\n  setSortAsc,\n  month,\n  hour,\n  showOnlyCurrentMonth,\n  showOnlyCurrentHour,\n}: ICatchProp) => {\n  const headings: string[] = data.columns;\n  let theCatches = data\n    .filter((theCatch: ICatch) => {\n      return showOnlyCurrentHour && !inCurrentHour(hour, theCatch.hours)\n        ? false\n        : true;\n    })\n    .filter((theCatch: ICatch) => {\n      return showOnlyCurrentMonth &&\n        !inCurrentMonth(\n          month,\n          hemisphereAdjustment(theCatch.months, northOrSouth)\n        )\n        ? false\n        : true;\n    })\n    .sort((a: ICatch, b: ICatch) =>\n      sortCatches(sortAsc, sortBy, hour, month, a, b)\n    );\n\n  return (\n    <Table>\n      <THead>\n        <tr>\n          {headings.map((heading: string) => (\n            <Heading\n              key={`heading-${heading}`}\n              onClick={() => {\n                if ((heading as keyof ICatch) === sortBy) {\n                  setSortAsc(!sortAsc);\n                } else {\n                  setSortAsc(true);\n                  setSortBy(heading as keyof ICatch);\n                }\n              }}\n              selected={sortBy === (heading as keyof ICatch)}\n            >\n              {heading}\n            </Heading>\n          ))}\n        </tr>\n      </THead>\n      <tbody>\n        {theCatches.map((theCatch: ICatch) => {\n          return (\n            <Row key={`theCatches-${theCatch.name}`}>\n              {headings.map((heading) => {\n                return (\n                  <Cell\n                    key={`theCatches-${theCatch.name}-${heading}`}\n                    label={heading}\n                  >\n                    {heading === 'hours' ? (\n                      <Timeline\n                        theCatch={theCatch.name}\n                        times={theCatch[heading]}\n                        currentTime={hour}\n                      />\n                    ) : heading === 'months' ? (\n                      <Timeline\n                        theCatch={theCatch.name}\n                        times={hemisphereAdjustment(\n                          theCatch[heading],\n                          northOrSouth\n                        )}\n                        currentTime={month - 1}\n                      />\n                    ) : (\n                      theCatch[heading as keyof ICatch]\n                    )}\n                  </Cell>\n                );\n              })}\n            </Row>\n          );\n        })}\n      </tbody>\n    </Table>\n  );\n};\n\nexport default Catches;\n","import React, { useState, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport axios from 'axios';\nimport { csvParse } from 'd3-dsv';\n\nimport { ICatch } from './types';\nimport { Theme, GlobalStyle } from './Theme';\nimport Controls from './components/Controls';\nimport Catches from './components/Catches';\n\nconst Container = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n\n  > * {\n    margin-top: 0.5rem;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst App: React.FC = () => {\n  const now = new Date();\n  const [fish, setFish] = useState<any | null>(null);\n  const [bugs, setBugs] = useState<any | null>(null);\n  const [fishOrBugs, setFishOrBugs] = useState('fish');\n  const [northOrSouth, setNorthOrSouth] = useState('north');\n  const [sortBy, setSortBy] = useState('name' as keyof ICatch);\n  const [sortAsc, setSortAsc] = useState(true);\n  const [date, setDate] = useState(\n    `${now.getFullYear()}-${\n      now.getMonth() < 9 ? '0' + (now.getMonth() + 1) : now.getMonth() + 1\n    }-${now.getDate() <= 9 ? '0' + now.getDate() : now.getDate()}`\n  );\n  const [time, setTime] = useState(\n    `${now.getHours() < 9 ? '0' + now.getHours() : now.getHours()}:${\n      now.getMinutes() < 9 ? '0' + now.getMinutes() : now.getMinutes()\n    }`\n  );\n  const [showOnlyCurrentMonth, setShowOnlyCurrentMonth] = useState(false);\n  const [showOnlyCurrentHour, setShowOnlyCurrentHour] = useState(false);\n\n  useEffect(() => {\n    const fetchFish = async () => {\n      const result = await axios.get('data/fish.csv');\n      setFish(csvParse(result.data));\n    };\n    const fetchBugs = async () => {\n      const result = await axios.get('data/bugs.csv');\n      setBugs(csvParse(result.data));\n    };\n    fetchFish();\n    fetchBugs();\n  }, []);\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <GlobalStyle />\n      <Container>\n        <Controls\n          fishOrBugs={fishOrBugs}\n          setFishOrBugs={setFishOrBugs}\n          northOrSouth={northOrSouth}\n          setNorthOrSouth={setNorthOrSouth}\n          date={date}\n          setDate={setDate}\n          time={time}\n          setTime={setTime}\n          showOnlyCurrentMonth={showOnlyCurrentMonth}\n          showOnlyCurrentHour={showOnlyCurrentHour}\n          setShowOnlyCurrentMonth={setShowOnlyCurrentMonth}\n          setShowOnlyCurrentHour={setShowOnlyCurrentHour}\n        ></Controls>\n        {fishOrBugs === 'fish' && fish && (\n          <Catches\n            data={fish}\n            northOrSouth={northOrSouth}\n            sortBy={sortBy}\n            sortAsc={sortAsc}\n            setSortBy={setSortBy}\n            setSortAsc={setSortAsc}\n            month={new Date(date).getMonth() + 1}\n            hour={+time.split(':')[0]}\n            showOnlyCurrentHour={showOnlyCurrentHour}\n            showOnlyCurrentMonth={showOnlyCurrentMonth}\n          />\n        )}\n        {fishOrBugs === 'bugs' && bugs && (\n          <Catches\n            data={bugs}\n            northOrSouth={northOrSouth}\n            sortBy={sortBy}\n            sortAsc={sortAsc}\n            setSortBy={setSortBy}\n            setSortAsc={setSortAsc}\n            month={new Date(date).getMonth() + 1}\n            hour={+time.split(':')[0]}\n            showOnlyCurrentHour={showOnlyCurrentHour}\n            showOnlyCurrentMonth={showOnlyCurrentMonth}\n          />\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}